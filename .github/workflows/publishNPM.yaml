# Publish NPM package to npmjs.com pipeline
name: Publish NPM package

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16.13.2'
          registry-url: 'https://registry.npmjs.org'

      - name: install packages
        run: yarn install

      - name: build dist package
        run: yarn build

      # Commit message with tags: "Commit message #v1.1.2" (the version number tag must be the last string in the message)
      # - name: get and set possible version number as Github env variable
      #   run: |
      #     # Set "checking" variable to false by default.
      #     echo "publish=false" >> $GITHUB_ENV

      #     # Get your last commit message, not the merge commit.
      #     text=$(git log -1 --no-merges --pretty=%B)

      #     # Read the commit message into an array split by "#".
      #     readarray -d "#" -t commit_message <<< "$text"

      #     # Sanity check.
      #     echo "version number?: ${commit_message[1]}"

      #     # Add version number and overwrite "checking" variable to true if there is one.
      #     if [[ "${commit_message[1]}" == *"v"*  ]]; then
      #       echo "publish=true" >> $GITHUB_ENV
      #       readarray -d "#" -t version <<< "$commit_message[1]"
      #       echo "version_number=${version[1]}" >> $GITHUB_ENV
      #     fi

      - name: read "publish" tag
        run: |
          echo "publish=false" >> $GITHUB_ENV

          # Get your last commit message, not the merge commit.
          text=$(git log -1 --no-merges --pretty=%B)

          echo "commit msg: ${text}"

          # Read the commit message into an array split by "#".
          readarray -d "#" -t commit_message <<< "$text"

          echo "tag: ${commit_message[1]}"

          # Check if "publish" tag exists and set env variable
          if [[ "${commit_message[1]}" == *"publish"*  ]]; then
            echo "publish=true" >> $GITHUB_ENV
          fi

      - uses: JS-DevTools/npm-publish@v1
        if: ${{ env.publish == 'true' }}
        with:
          token: ${{ secrets.NODE_AUTH_TOKEN }}
          access: 'public'
          dry-run: false

      - name: test tag name (bump 6)
        run: |
          echo "Trying this ${{ github.publish }}!"
          echo "Trying this2 ${{ env.publish }}!"

      # - working-directory: ./src/dist
      #   run: npm set init-author-name "JarSeal"
      # - working-directory: ./src/dist
      #   run: npm set init-license "MIT"
      # - working-directory: ./src/dist
      #   run: npm set init-name "lighterjs"
      # - working-directory: ./src/dist
      #   run: npm set init-description "Light weight vanilla JS component, state, and router framework."
      # - working-directory: ./src/dist
      #   run: npm set init-version ""

      # - name: init package
      #   working-directory: ./src/dist
      #   run: npm init --yes

      # - name: publish package
      #   working-directory: ./src/dist
      #   run: npm publish --access public
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
